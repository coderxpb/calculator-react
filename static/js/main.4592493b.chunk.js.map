{"version":3,"sources":["components/calcContainer.js","components/calcScreen.js","components/calcButtons.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["CalcContainer","styled","div","CalcScreen","PrevScreen","CurScreen","CalcButton","button","props","gridSize","buttonColor","Calculator","useState","curValue","setCurValue","prevValue","setPrevValue","operator","setOperator","appendValue","e","preventDefault","value","target","getAttribute","includes","operatorClicked","curOperator","newValue","String","floatPrev","parseFloat","floatCur","calculateVal","onClick","tempVal","substring","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4592493b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CalcContainer = styled.div`\n\tdisplay: grid;\n\tjustify-content: center;\n\talign-content: center;\n\n\twidth:400px;\n\tmargin: 40px auto;\n\n\tgrid-template-columns: repeat(4,100px);\n\tgrid-template-rows: minmax(120px, auto) repeat(5, 100px);\n\tbox-shadow: 4px 4px 12px #342;\n\tborder-radius: 12px;\n`","import styled from 'styled-components'\n\nexport const CalcScreen = styled.div`\n\tgrid-column: 1 / -1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\n\tpadding: 10px;\n\tborder-top-left-radius: 12px;\n\tborder-top-right-radius: 12px;\n\n\twrod-wrap: break-word;\n\tword-break: break-all;\n\ttext-align: right;\n\t\n\tbackground: rgba(100, 127, 255, 0.7);\n\n`\n\nexport const PrevScreen = styled.div`\n\tcolor: rgba(255,255,255,0.7);\n\tfont-size: 1.5rem;\n`\n\nexport const CurScreen = styled.div`\n\tcolor: white;\n\tfont-size: 2.5rem;\n`\n","import styled from 'styled-components';\n\nexport const CalcButton = styled.button`\n\tgrid-column: ${props=> props.gridSize? \"span 2\":\"span 1\"};\n\tmargin: 3px;\n\toutline: none;\n\tborder: none;\n\tborder-radius: 8px;\n\n\tcursor: pointer;\n\n\tbackground-color: ${props=>{\n\t\tif(props.buttonColor === \"op\"){\n\t\t\treturn (\"rgba(110,70,180,0.6)\");\n\t\t}\n\t\telse if(props.buttonColor === \"light\"){\n\t\t\treturn (\"rgba(200, 80, 150, 0.70)\");\n\t\t}\n\t\telse{\n\t\t\treturn (\"rgba(100,100,255,0.35)\");\n\t\t}\n\t}};\n\n\tfont-size: 2rem;\n\n\t&:hover{\n\t\tbackground-color: ${props => {\n\t\tif (props.buttonColor === \"op\") {\n\t\t\treturn (\"rgba(110,70,180,0.8)\");\n\t\t}\n\t\telse if(props.buttonColor===\"light\"){\n\t\t\treturn (\"rgba(230, 80, 150, 0.90)\");\n\t\t}\n\t\telse {\n\t\t\treturn (\"rgba(100,100,255,0.6);\");\n\t\t}\n\t}};\n\t\t\n\t}\n`","import React, {useState} from 'react';\nimport {CalcContainer} from './calcContainer';\nimport {CalcScreen,PrevScreen,CurScreen} from './calcScreen';\nimport {CalcButton} from './calcButtons';\n\nfunction Calculator(props){\n\tconst [curValue, setCurValue] = useState('');\n\tconst [prevValue, setPrevValue] = useState('');\n\tconst [operator, setOperator] = useState('');\n\n\tconst appendValue = (e) =>{\n\t\te.preventDefault();\n\n\t\tconst value = (e.target.getAttribute('data-val'));\n\t\tif(value === '.' && curValue.includes('.')) return\n\t\tsetCurValue(curValue + value)\n\t}\n\n\tconst delValue = (e) =>{\n\t\te.preventDefault();\n\t\tif(curValue !==''){\n\t\t\tlet tempVal = curValue;\n\t\t\ttempVal = tempVal.substring(0,tempVal.length-1);\n\t\t\tsetCurValue(tempVal);\n\t\t}\n\t}\n\n\tconst allClear = (e) =>{\n\t\te.preventDefault();\n\t\tsetCurValue('');\n\t\tsetPrevValue('');\n\t\tsetOperator('');\n\t}\n\n\tconst calculateVal = () =>{\n\t\tlet floatPrev = parseFloat(prevValue);\n\t\tlet floatCur = parseFloat(curValue);\n\t\tswitch(operator){\n\t\t\tcase '+': return (floatPrev+floatCur);\n\t\t\tcase '-': return (floatPrev-floatCur);\n\t\t\tcase 'x': return (floatPrev*floatCur);\n\t\t\tcase '/': return (floatPrev/floatCur);\n\t\t\tdefault: return null;\n\t\t}\n\t}\n\n\tconst operatorClicked = (e) =>{\n\t\te.preventDefault();\n\t\tlet curOperator = e.target.getAttribute('data-val');\n\t\tif(curValue !== ''){\n\t\t\tif(prevValue !== ''){\n\t\t\t\tlet newValue = String(calculateVal());\n\t\t\t\tif (curOperator !=='='){\n\t\t\t\t\tsetPrevValue(newValue);\n\t\t\t\t\tsetOperator(curOperator);\n\t\t\t\t\tsetCurValue('');\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetPrevValue('');\n\t\t\t\t\tsetCurValue(newValue);\n\t\t\t\t\tsetOperator('');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(curOperator !== '='){\n\t\t\t\t\tsetPrevValue(curValue);\n\t\t\t\t\tsetOperator(e.target.getAttribute('data-val'));\n\t\t\t\t\tsetCurValue('');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<CalcContainer>\n\t\t\t\t<CalcScreen>\n\t\t\t\t\t<PrevScreen>{prevValue} {operator}</PrevScreen>\n\t\t\t\t\t<CurScreen>{curValue}</CurScreen>\n\t\t\t\t</CalcScreen>\n\t\t\t\t<CalcButton onClick = {allClear} gridSize buttonColor=\"light\">AC</CalcButton>\n\t\t\t\t<CalcButton onClick = {delValue} buttonColor=\"light\">DEL</CalcButton>\n\t\t\t\t<CalcButton data-val={'/'} onClick={operatorClicked} buttonColor=\"op\">/</CalcButton>\n\t\t\t\t<CalcButton data-val={'7'} onClick={appendValue}>7</CalcButton>\n\t\t\t\t<CalcButton data-val={'8'} onClick={appendValue}>8</CalcButton>\n\t\t\t\t<CalcButton data-val={'9'} onClick={appendValue}>9</CalcButton>\n\t\t\t\t<CalcButton data-val={'x'} onClick={operatorClicked} buttonColor=\"op\">x</CalcButton>\n\t\t\t\t<CalcButton data-val={'4'} onClick={appendValue}>4</CalcButton>\n\t\t\t\t<CalcButton data-val={'5'} onClick={appendValue}>5</CalcButton>\n\t\t\t\t<CalcButton data-val={'6'} onClick={appendValue}>6</CalcButton>\n\t\t\t\t<CalcButton data-val={'-'} onClick={operatorClicked} buttonColor=\"op\">-</CalcButton>\n\t\t\t\t<CalcButton data-val={'1'} onClick={appendValue}>1</CalcButton>\n\t\t\t\t<CalcButton data-val={'2'} onClick={appendValue}>2</CalcButton>\n\t\t\t\t<CalcButton data-val={'3'} onClick={appendValue}>3</CalcButton>\n\t\t\t\t<CalcButton data-val={'+'} onClick={operatorClicked} buttonColor=\"op\">+</CalcButton>\n\t\t\t\t<CalcButton data-val={'.'} onClick={appendValue} buttonColor=\"light\">.</CalcButton>\n\t\t\t\t<CalcButton data-val={'0'} onClick={appendValue}>0</CalcButton>\n\t\t\t\t<CalcButton data-val={'='} onClick={operatorClicked} gridSize buttonColor=\"op\">=</CalcButton>\n\t\t\t</CalcContainer>\n\t\t</div>\n\t)\n}\n\nexport default Calculator;","import './App.scss';\nimport Calculator from './components/Calculator'\n\nfunction App() {\n  return (\n\t\t<Calculator />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}